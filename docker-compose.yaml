version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: terraform-logs-rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ основной порт
      - "15672:15672" # RabbitMQ Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RMQ_ADMIN_USER}
      RABBITMQ_DEFAULT_PASS: ${RMQ_ADMIN_PASS}
    restart: unless-stopped
    networks:
      - terraform-logs-network

  log-ingestion-service:
    build:
      context: ./backend/log_ingestion_service
      dockerfile: Dockerfile
    container_name: log-ingestion-service
    depends_on:
      - rabbitmq
    environment:
      RMQ_URL: ${LIS_RMQ_URL}
      RMQ_QUEUE: ${LIS_RMQ_QUEUE}
      RMQ_CONSUMER: ${LIS_RMQ_CONSUMER}
      RMQ_PREFETCH: ${LIS_RMQ_PREFETCH}
    restart: unless-stopped
    networks:
      - terraform-logs-network

  log-generator-service:
    build:
      context: ./backend/log_generator_service
      dockerfile: Dockerfile
    container_name: log-generator-service
    depends_on:
      - rabbitmq
    environment:
      SPRING_RABBITMQ_HOST: ${SPRING_RABBITMQ_HOST}
      SPRING_RABBITMQ_PORT: ${SPRING_RABBITMQ_PORT}
      SPRING_RABBITMQ_USERNAME: ${SPRING_RABBITMQ_USERNAME}
      SPRING_RABBITMQ_PASSWORD: ${SPRING_RABBITMQ_PASSWORD}
      LOGS_PER_SECOND: ${LOGS_PER_SECOND}
      JSON_FILE: ${JSON_FILE}
      LOG_QUEUE_NAME: ${LOG_QUEUE_NAME}
    restart: unless-stopped
    networks:
      - terraform-logs-network

  postgres:
    image: postgres:16
    container_name: terraform-logs-postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - terraform-logs-network

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: terraform-logs-pgadmin
    depends_on:
      - postgres
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - terraform-logs-network

volumes:
  rabbitmq_data:
  rabbitmq_log:
  postgres_data:
  pgadmin_data:


networks:
  terraform-logs-network:
    driver: bridge
