version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: terraform-logs-rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ основной порт
      - "15672:15672" # RabbitMQ Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RMQ_ADMIN_USER}
      RABBITMQ_DEFAULT_PASS: ${RMQ_ADMIN_PASS}
    restart: unless-stopped
    networks:
      - terraform-logs-network

  log-ingestion-service:
    build:
      context: ./backend/log_ingestion_service
      dockerfile: Dockerfile
    container_name: log-ingestion-service
    depends_on:
      - rabbitmq
    environment:
      RMQ_URL: ${LIS-RMQ_URL:-amqp://admin:password@rabbitmq:5672/}
      RMQ_QUEUE: ${LIS-RMQ_QUEUE:-log_ingestion}
      RMQ_CONSUMER: ${LIS-RMQ_CONSUMER:-log_ingestion_service}
      RMQ_PREFETCH: ${LIS-RMQ_PREFETCH:-5}
    restart: unless-stopped
    networks:
      - terraform-logs-network

  log-generator-service:
    build:
      context: ./backend/log_generator_service
      dockerfile: Dockerfile
    container_name: log-generator-service
    depends_on:
      - rabbitmq
    environment:
      SPRING_RABBITMQ_HOST: ${SPRING_RABBITMQ_HOST:-rabbitmq}
      SPRING_RABBITMQ_PORT: ${SPRING_RABBITMQ_PORT:-5672}
      SPRING_RABBITMQ_USERNAME: ${SPRING_RABBITMQ_USERNAME:-guest}
      SPRING_RABBITMQ_PASSWORD: ${SPRING_RABBITMQ_PASSWORD:-guest}
      LOGS_PER_SECOND: ${LOGS_PER_SECOND:-5}
      JSON_FILE: ${JSON_FILE:-logs/tflog.json}
      LOG_QUEUE_NAME: ${LOG_QUEUE_NAME:-terraform_logs}
    restart: unless-stopped
    networks:
      - terraform-logs-network

volumes:
  rabbitmq_data:
  rabbitmq_log:


networks:
  terraform-logs-network:
    driver: bridge
